#
# Makefile for the P2P Sample Application using android-ndk
#
# Copyright (C) 2016, Broadcom Corporation
# All Rights Reserved.
# 
# This is UNPUBLISHED PROPRIETARY SOURCE CODE of Broadcom Corporation;
# the contents of this file may not be disclosed to third parties, copied
# or duplicated in any form, in whole or in part, without the prior
# written permission of Broadcom Corporation.
#
# use the following command to compile
# "make -f makefile.android PATH="/projects/hnd/tools/linux/hndtools-arm-linux-androideabi/android-ndk-r5c/standalone-toolchain-api5/bin/:${PATH}""
# $Id: Makefile,v 18:06:23 Exp $

# This file is present in old branches without WLAN_Common.mk
WLAN_ComponentsInUse := bcmwifi
-include ../../../../makefiles/WLAN_Common.mk

LOCAL_PATH:= $(shell /bin/pwd)
base := $(LOCAL_PATH)

SRCBASE  := ../../../../../src

BLDTYPE    := debug

CROSS_COMPILE = arm-linux-androideabi-

CC         := $(CROSS_COMPILE)gcc
AR         := $(CROSS_COMPILE)ar
LD         := $(CROSS_COMPILE)ld
NM         := $(CROSS_COMPILE)nm
STRIP      := $(CROSS_COMPILE)strip
TARGETENV  ?= android
TARGETOS   ?= unix
TARGETARCH ?= arm_android

CONFIG_P2P_AND_SOFTAP=y
CONFIG_P2P_AND_UPNP=n

ifeq ($(origin extsec),undefined)
  CONFIG_EXTERNAL_SECURITY=n
  OBJDIR    = obj/$(TARGETARCH)-$(BLDTYPE)-intsec
  LIBWPSCLIOBJDIR    = obj/$(TARGETARCH)-$(BLDTYPE)-intsec-libwpscli
  LIBP2POBJDIR    = obj/$(TARGETARCH)-$(BLDTYPE)-intsec-libp2p
else
  CONFIG_EXTERNAL_SECURITY=y
  OBJDIR    = obj/$(TARGETARCH)-$(BLDTYPE)-extsec
  LIBWPSCLIOBJDIR    = obj/$(TARGETARCH)-$(BLDTYPE)-extsec-libwps
  LIBP2POBJDIR    = obj/$(TARGETARCH)-$(BLDTYPE)-extsec-libp2p
endif

ifeq ($(BLDTYPE),debug)
  LOCAL_CFLAGS   += -g -D_TUDEBUGTRACE
endif

LOCAL_CFLAGS += -mthumb -fabi-version=1 -D__linux__ -DTARGETENV_android -DLINUX -Dlinux -Wextra -MD -Wno-format-security
LOCAL_CFLAGS += -DTARGETOS_unix -DTARGETARCH_arm_android -D_ARM_

WPSBASE     := $(SRCBASE)/wps
WPSCOMMON   := $(WPSBASE)/common
WPSLINUX    := $(WPSBASE)/linux
WPSCLI      := $(WPSBASE)/wpscli
WPSCLILINUX := $(WPSCLI)/linux
WPSCLICOMMON:= $(WPSCLI)/common
DHCPDBASE   := $(SRCBASE)/apps/dhcpd
P2PBASE     := $(SRCBASE)/p2p/p2plib
P2PANDROID  := $(SRCBASE)/p2p/p2plib/android
P2PINC      := $(P2PBASE)/include
P2PCOMMON   := $(P2PBASE)/common
P2PSIG      := $(P2PBASE)/common/p2psig
P2PLINUX    := $(P2PBASE)/linux
BCMCRYPTO   := $(SRCBASE)/bcmcrypto
EXTSECBASE  := $(SRCBASE)/security/secfrw

INCLUDES += -I$(P2PBASE)/include
INCLUDES += -I$(P2PBASE)/android/include
INCLUDES += -I$(P2PBASE)/linux
INCLUDES += -I$(P2PBASE)/common
INCLUDES += -I$(SRCBASE)/include
INCLUDES += -I$(SRCBASE)/common/include
INCLUDES += -I$(SRCBASE)/include/bcmcrypto
INCLUDES += -I$(SRCBASE)/include/proto
INCLUDES += -I$(SRCBASE)/common/include/proto
INCLUDES += -I$(WPSCOMMON)/include
INCLUDES += -I$(WPSLINUX)/inc
INCLUDES += -I$(WPSCLI)/include
INCLUDES += -I$(WPSCLICOMMON)/include
INCLUDES += -I$(DHCPDBASE)/include
INCLUDES += -I$(SRCBASE)/include
INCLUDES += -I$(P2PBASE)/linux/sampleapp
INCLUDES += -I$(EXTSECBASE)/include
INCLUDES += -I$(SRCBASE)/supp/include
INCLUDES += $(WLAN_ComponentIncPath)

INCLUDE  := $(INCLUDES)
LDFLAGS += -lc -llog -lwlp2p -lwlwpscli
LIBLDFLAGS += -lc -llog -shared

vpath %.c $(P2PLINUX) $(P2PCOMMON) $(P2PSIG) \
$(BCMCRYPTO) $(EXTSECBASE)/tmr $(EXTSECBASE)/utils \
$(DHCPDBASE)/common $(DHCPDBASE)/linux \
$(WPSCOMMON)/shared  $(WPSCOMMON)/ap $(WPSCOMMON)/sta $(WPSCLILINUX) \
$(WPSCOMMON)/enrollee $(WPSCOMMON)/registrar $(WPSLINUX) $(WPSCLICOMMON) \
$(WLAN_StdSrcDirsA) $(WLAN_ComponentSrcDirs)

NO_WPS_THREAD = 1

ifeq ($(NO_WPS_THREAD),1)
LOCAL_CFLAGS += -DWPSCLI_NO_WPS_LOOP
endif

LIBWPSCLIFILES =    aes.c rijndael-alg-fst.c dh.c bn.c sha256.c hmac_sha256.c random.c reg_proto_msg.c \
reg_proto_utils.c state_machine.c tlv.c tutrace.c buffobj.c dev_config.c ie_utils.c wps_utils.c \
ap_api.c ap_ssr.c ap_eap_sm.c ap_upnp_sm.c sta_eap_sm.c enr_api.c enr_reg_sm.c reg_sm.c wps_sslist.c \
wpscli_osl_helper.c wpscli_osl_timer.c wpscli_pktdisp.c wpscli_wl_handler.c wpscli_wlan.c wpscli_api.c \
wpscli_softap.c wpscli_sta.c wpscli_wl.c wpscli_wpscore_hooks.c

# P2P Library feature options
LOCAL_CFLAGS += -DP2PAPI_ENABLE_WPS=1
LOCAL_CFLAGS += -DP2PAPI_ENABLE_MULTI_CHANNEL=1
# Whether to use in-driver or external WPA2-PSK authenticator/supplicant.
LOCAL_CFLAGS += -DP2PAPI_USE_IDAUTH=1
LOCAL_CFLAGS += -DP2PAPI_USE_IDSUP=1

ifeq ($(CONFIG_P2P_AND_SOFTAP), y)
  LOCAL_CFLAGS += -DP2PAPI_ENABLE_SERVICE_DISCOVERY=1
else
  LOCAL_CFLAGS += -DSOFTAP_ONLY
  LOCAL_CFLAGS += -DP2PAPI_ENABLE_SERVICE_DISCOVERY=0
endif

# Whether to use in-driver or external WPA2-PSK authenticator/supplicant.
ifeq ($(CONFIG_EXTERNAL_SECURITY), y)
  LOCAL_CFLAGS += -DP2PAPI_USE_IDAUTH=0
  LOCAL_CFLAGS += -DP2PAPI_USE_IDSUP=0
  USE_EXT_SECAGENT=1
else
  LOCAL_CFLAGS += -DP2PAPI_USE_IDAUTH=1
  LOCAL_CFLAGS += -DP2PAPI_USE_IDSUP=1
  USE_EXT_SECAGENT=0
endif

LOCAL_CFLAGS += -DBCMP2P -DWLP2P -DWIFI_ACT_FRAME

ifeq ($(CONFIG_P2P_AND_UPNP), y)
LOCAL_CFLAGS += -DP2P_UPNP_DISCOVERY=1
endif


LIBP2PFILES += p2plib_misc.c p2plib_dbg.c p2plib_wlu.c p2pwl.c BcmP2PAPI.c  \
p2plib_connect.c p2plib_discover.c p2plib_negotiate.c p2plib_prov_disc.c p2plib_invite.c \
p2plib_device_disc.c p2plib_presence.c bcmseclib_linux_timer.c bcmseclib_timer.c bcm_llist.c \

_extra_file := $(strip $(wildcard $(P2PBASE)/common/p2psig/p2plib_dispatch.c))
_extra_file2 := $(strip $(wildcard $(P2PCOMMON)/p2plib_aftx.c))


ifdef _extra_file
	LIBP2PFILES +=   p2plib_dispatch.c
endif
ifdef _extra_file2
	LIBP2PFILES +=   p2plib_aftx.c
endif
LIBP2PFILES +=   p2plib_generic_osl.c
LIBP2PFILES +=   p2posl_linux.c

ifeq ($(CONFIG_EXTERNAL_SECURITY), n)
LIBP2PFILES +=   passhash.c
LIBP2PFILES +=   prf.c
LIBP2PFILES +=   sha1.c
endif

ifeq ($(CONFIG_P2P_AND_SOFTAP), y)
LIBP2PFILES +=   p2plib_sd.c
endif

OBJS +=  p2p_app.c p2p_app_cli.c p2p_app_main.c p2papp_linux.c p2papp_persist_file.c \
p2papp_queue.c

#OBJS +=  main.c config.c dhcpsend.c ippool.c mac.c packet.c pktparse.c linuxsocket.c linuxosl.c
CFLAGS   += $(LOCAL_CFLAGS)

P2PAPPOBJS =  $(OBJS:%.c=$(OBJDIR)/%.o)
LIBP2POBJS =  $(LIBP2PFILES:%.c=$(LIBP2POBJDIR)/%.o)
LIBWPSCLIOBJS =  $(LIBWPSCLIFILES:%.c=$(LIBWPSCLIOBJDIR)/%.o)

LIBS=$(LIBWPSCLIOBJDIR)/libwlwpscli.so $(LIBP2POBJDIR)/libwlp2p.so
.PHONY : libs

all:$(LIBS) $(OBJDIR)/wlp2papp

$(OBJDIR)/wlp2papp: $(P2PAPPOBJS)
	$(CC) -o  $@ $^ $(LDFLAGS) -L$(base)/$(LIBP2POBJDIR) -L$(base)/$(LIBWPSCLIOBJDIR)

$(P2PAPPOBJS) : $(OBJDIR)/%.o : %.c
	@[ -d "$(@D)" ] || mkdir -pv $(@D)
	$(CC) -c $(CFLAGS) $(INCLUDE) $< -o $@

libs : $(LIBS)

$(LIBP2POBJDIR)/libwlp2p.so : $(LIBP2POBJS)
	$(CC) -o $@ $^ $(LIBLDFLAGS) -L$(base)/$(LIBWPSCLIOBJDIR)  -lwlwpscli

$(LIBP2POBJS) : $(LIBP2POBJDIR)/%.o : %.c
	@[ -d "$(@D)" ] || mkdir -pv $(@D)
	$(CC) -c $(CFLAGS) $(INCLUDE) $< -o $@

$(LIBWPSCLIOBJDIR)/libwlwpscli.so : $(LIBWPSCLIOBJS)
	$(CC) -o $@ $^ $(LIBLDFLAGS)

$(LIBWPSCLIOBJS) : $(LIBWPSCLIOBJDIR)/%.o : %.c
	@[ -d "$(@D)" ] || mkdir -pv $(@D)
	$(CC) -c $(CFLAGS) $(INCLUDE) $< -o $@
